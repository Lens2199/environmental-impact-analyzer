{"ast":null,"code":"var _jsxFileName = \"/Users/deocherisme/environmental-impact-analyzer/frontend/src/pages/ComparisonPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Box, Container, Typography, Grid, Paper, CircularProgress, Button, Card, CardContent, CardMedia, Divider, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\n\n// Import the API service and context\nimport { productAPI, analysisAPI } from '../services/api';\nimport { useAppContext } from '../context/AppContext';\n\n// Mock analysis data for development\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockAnalyses = {\n  '1': {\n    id: 'a1',\n    scores: {\n      overall: 8.2,\n      carbon: 7.5,\n      water: 8.7,\n      resources: 8.4\n    },\n    explanation: \"This eco-friendly smartphone is designed with sustainability in mind. Made with recycled materials and built for easy repair and recycling at end of life. The use of recycled aluminum and plastic reduces resource consumption, and the manufacturing location in Germany typically means stricter environmental regulations.\",\n    suggestions: \"Consider implementing a take-back program. Increase use of renewable energy in manufacturing. Source materials closer to production facility to reduce transportation impacts.\"\n  },\n  '2': {\n    id: 'a2',\n    scores: {\n      overall: 8.5,\n      carbon: 7.8,\n      water: 6.5,\n      resources: 9.2\n    },\n    explanation: \"This organic cotton t-shirt has a positive environmental impact compared to conventional cotton products. Organic cotton production significantly reduces pesticide and synthetic fertilizer use. Manufacturing in Portugal ensures ethical production standards and reduces transportation emissions for European markets.\",\n    suggestions: \"Consider using natural or low-impact dyes. Implement water recycling in the manufacturing process. Source cotton from regenerative farms.\"\n  },\n  '3': {\n    id: 'a3',\n    scores: {\n      overall: 9.0,\n      carbon: 8.9,\n      water: 9.2,\n      resources: 9.1\n    },\n    explanation: \"These bamboo kitchen utensils have an excellent environmental profile. Bamboo is a rapidly renewable resource with limited water requirements. The manufacturing in Vietnam is close to the bamboo source, reducing transportation impacts. The product is naturally biodegradable at end of life.\",\n    suggestions: \"Ensure fair labor practices in bamboo harvesting. Consider using solar energy in manufacturing. Use plastic-free packaging.\"\n  },\n  '4': {\n    id: 'a4',\n    scores: {\n      overall: 7.8,\n      carbon: 7.5,\n      water: 8.0,\n      resources: 7.9\n    },\n    explanation: \"This solar-powered power bank offers good environmental benefits by utilizing renewable energy. The use of recycled plastic in construction is commendable. Manufacturing in China may increase carbon footprint due to transportation and potentially coal-based electricity usage.\",\n    suggestions: \"Increase the percentage of recycled materials. Source components locally to manufacturing location. Improve end-of-life recyclability through better design.\"\n  },\n  '5': {\n    id: 'a5',\n    scores: {\n      overall: 8.7,\n      carbon: 8.3,\n      water: 9.0,\n      resources: 8.8\n    },\n    explanation: \"This plant-based laundry detergent offers significant environmental benefits. The use of plant extracts and natural enzymes reduces aquatic toxicity and biodegrades readily. Manufacturing in the USA reduces transportation impacts for North American markets.\",\n    suggestions: \"Consider concentrated formulation to reduce packaging and transportation impacts. Use recycled plastic in packaging or explore plastic-free alternatives.\"\n  },\n  '6': {\n    id: 'a6',\n    scores: {\n      overall: 8.9,\n      carbon: 8.7,\n      water: 8.5,\n      resources: 9.5\n    },\n    explanation: \"This recycled paper notebook has excellent resource efficiency. 100% recycled paper significantly reduces virgin resource consumption and waste. Vegetable-based inks eliminate toxic heavy metals and improve recyclability. Manufacturing in Canada ensures strong environmental regulations.\",\n    suggestions: \"Consider using renewable energy in manufacturing. Explore plastic-free binding options. Ensure FSC certification for any virgin paper components.\"\n  }\n};\nfunction ComparisonPage() {\n  _s();\n  var _params$get, _analyses$getProductI, _analyses$getProductI2, _analyses$getProductI3;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Get context to access selected product objects\n  const {\n    selectedProducts,\n    selectedProductObjects,\n    getProductId\n  } = useAppContext();\n\n  // States\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [products, setProducts] = useState([]);\n  const [analyses, setAnalyses] = useState({});\n\n  // Parse product IDs from URL or use context\n  const params = new URLSearchParams(location.search);\n  const productIdsFromURL = ((_params$get = params.get('products')) === null || _params$get === void 0 ? void 0 : _params$get.split(',')) || [];\n  const productIds = productIdsFromURL.length > 0 ? productIdsFromURL : selectedProducts;\n\n  // Helper to create a mock analysis for a product - define before it's used\n  const createMockAnalysis = useCallback(product => {\n    const scores = {\n      overall: Math.round((6 + Math.random() * 4) * 10) / 10,\n      carbon: Math.round((6 + Math.random() * 4) * 10) / 10,\n      water: Math.round((6 + Math.random() * 4) * 10) / 10,\n      resources: Math.round((6 + Math.random() * 4) * 10) / 10\n    };\n    return {\n      id: `mock-${getProductId(product)}`,\n      scores,\n      explanation: `This ${product.category} product has a moderate to good environmental impact. ${product.materials ? `It is made from ${product.materials.join(', ')}.` : ''} ${product.manufacturingLocation ? `Manufacturing in ${product.manufacturingLocation} impacts its overall footprint.` : ''}`,\n      suggestions: \"Consider sustainable sourcing of materials. Reduce packaging waste. Implement renewable energy in manufacturing.\"\n    };\n  }, [getProductId]);\n\n  // Helper function to fetch analyses for products\n  const fetchAnalysesForProducts = useCallback(async productsToAnalyze => {\n    const analysisResults = {};\n\n    // Use mock data in development mode\n    if (process.env.NODE_ENV === 'development') {\n      for (const product of productsToAnalyze) {\n        const productId = getProductId(product);\n        // Use mockAnalyses directly without adding it as a dependency\n        analysisResults[productId] = mockAnalyses[productId] || createMockAnalysis(product);\n      }\n      setAnalyses(analysisResults);\n      return;\n    }\n\n    // In production, fetch real analyses\n    for (const product of productsToAnalyze) {\n      const productId = getProductId(product);\n      try {\n        const response = await analysisAPI.getAnalysisByProductId(productId);\n        analysisResults[productId] = response.data;\n      } catch (err) {\n        console.error(`Error fetching analysis for product ${productId}:`, err);\n        // Use mock data as fallback, referencing mockAnalyses directly\n        analysisResults[productId] = mockAnalyses[productId] || createMockAnalysis(product);\n      }\n    }\n    setAnalyses(analysisResults);\n  }, [createMockAnalysis, getProductId]); // removed mockAnalyses as dependency\n\n  // Fetch products and their analyses\n  useEffect(() => {\n    const fetchProductData = async () => {\n      if (productIds.length === 0) {\n        return;\n      }\n      console.log('Fetching products for IDs:', productIds);\n      setLoading(true);\n      setError('');\n      try {\n        // Try to use stored product objects first\n        if (selectedProductObjects.length >= productIds.length) {\n          console.log('Using stored product objects:', selectedProductObjects);\n\n          // Filter to only the products we need\n          const relevantProducts = selectedProductObjects.filter(product => productIds.includes(getProductId(product)));\n          if (relevantProducts.length === productIds.length) {\n            setProducts(relevantProducts);\n\n            // Now fetch analyses for these products\n            await fetchAnalysesForProducts(relevantProducts);\n            return;\n          }\n        }\n\n        // Fallback: Fetch products from API\n        console.log('Fetching products from API as fallback');\n        const fetchedProducts = [];\n        for (const id of productIds) {\n          try {\n            const response = await productAPI.getProductById(id);\n            fetchedProducts.push(response.data);\n          } catch (err) {\n            console.error(`Error fetching product with ID ${id}:`, err);\n            // If in development, use mock data\n            if (process.env.NODE_ENV === 'development') {\n              // Find the product from our mock list based on ID\n              const mockProducts = [{\n                id: '1',\n                name: 'Eco-Friendly Smartphone',\n                category: 'Electronics',\n                description: 'Made with recycled materials and designed for easy repair and recycling at end of life.',\n                materials: ['Recycled Aluminum', 'Recycled Plastic', 'Glass'],\n                manufacturingLocation: 'Germany',\n                imageUrl: '/pic/Eco-Friendly Smartphone.jpg'\n              }, {\n                id: '2',\n                name: 'Organic Cotton T-Shirt',\n                category: 'Clothing',\n                description: 'Made with 100% organic cotton grown without harmful pesticides or synthetic fertilizers.',\n                materials: ['Organic Cotton'],\n                manufacturingLocation: 'Portugal',\n                imageUrl: '/pic/Organic Cotton T-Shirt.jpg'\n              }, {\n                id: '3',\n                name: 'Bamboo Kitchen Utensils',\n                category: 'Home Goods',\n                description: 'Sustainable bamboo kitchen utensils that are biodegradable and renewable.',\n                materials: ['Bamboo'],\n                manufacturingLocation: 'Vietnam',\n                imageUrl: '/pic/Bamboo Kitchen Utensils.jpg'\n              }, {\n                id: '4',\n                name: 'Solar-Powered Power Bank',\n                category: 'Electronics',\n                description: 'Charge your devices using clean solar energy. Includes recycled components.',\n                materials: ['Recycled Plastic', 'Silicon', 'Lithium Battery'],\n                manufacturingLocation: 'China',\n                imageUrl: '/pic/Solar-Powered Power Bank.jpg'\n              }, {\n                id: '5',\n                name: 'Plant-Based Laundry Detergent',\n                category: 'Home Goods',\n                description: 'Biodegradable laundry detergent made from plant-derived ingredients.',\n                materials: ['Plant Extracts', 'Natural Enzymes'],\n                manufacturingLocation: 'USA',\n                imageUrl: '/pic/Plant-Based Laundry Detergent.jpg'\n              }, {\n                id: '6',\n                name: 'Recycled Paper Notebook',\n                category: 'Home Goods',\n                description: '100% recycled paper notebook with vegetable-based ink printing.',\n                materials: ['Recycled Paper', 'Vegetable Ink'],\n                manufacturingLocation: 'Canada',\n                imageUrl: '/pic/Recycled Paper Notebook.jpg'\n              }];\n              const mockProduct = mockProducts.find(p => p.id === id);\n              if (mockProduct) {\n                fetchedProducts.push(mockProduct);\n              }\n            }\n          }\n        }\n        if (fetchedProducts.length > 0) {\n          setProducts(fetchedProducts);\n\n          // Now fetch analyses for these products\n          await fetchAnalysesForProducts(fetchedProducts);\n        } else {\n          setError('No products could be found for comparison.');\n        }\n      } catch (err) {\n        console.error('Error fetching comparison data:', err);\n        setError(err.message || 'Failed to load comparison data. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProductData();\n  }, [productIds, selectedProductObjects, fetchAnalysesForProducts, getProductId]);\n\n  // Navigate back to products\n  const handleBack = () => {\n    navigate('/');\n  };\n\n  // Get score color class\n  const getScoreColorClass = score => {\n    if (score >= 9) return 'score-excellent';else if (score >= 7) return 'score-good';else if (score >= 5) return 'score-average';else if (score >= 3) return 'score-poor';else return 'score-bad';\n  };\n\n  // Get score color for styling\n  const getScoreColor = score => {\n    if (score >= 9) return '#43a047';else if (score >= 7) return '#7cb342';else if (score >= 5) return '#fdd835';else if (score >= 3) return '#fb8c00';else return '#e53935';\n  };\n\n  // Find the best product based on overall score\n  const getBestProduct = () => {\n    if (Object.keys(analyses).length === 0 || products.length === 0) return null;\n    let bestId = null;\n    let bestScore = -1;\n    for (const product of products) {\n      const id = getProductId(product);\n      const analysis = analyses[id];\n      if (analysis && analysis.scores.overall > bestScore) {\n        bestScore = analysis.scores.overall;\n        bestId = id;\n      }\n    }\n    return products.find(p => getProductId(p) === bestId) || null;\n  };\n\n  // Get best product for a specific category\n  const getBestForCategory = category => {\n    if (Object.keys(analyses).length === 0 || products.length === 0) return null;\n    let bestId = null;\n    let bestScore = -1;\n    for (const product of products) {\n      const id = getProductId(product);\n      const analysis = analyses[id];\n      if (analysis && analysis.scores[category] > bestScore) {\n        bestScore = analysis.scores[category];\n        bestId = id;\n      }\n    }\n    return products.find(p => getProductId(p) === bestId) || null;\n  };\n  const bestProduct = getBestProduct();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"page-transition\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        pt: 6,\n        pb: 6,\n        backgroundColor: 'primary.main',\n        color: 'white'\n      },\n      className: \"eco-gradient-bg\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          gutterBottom: true,\n          sx: {\n            fontWeight: 'bold',\n            textAlign: 'center'\n          },\n          children: \"Product Comparison\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mb: 2,\n            textAlign: 'center'\n          },\n          children: \"Compare environmental impact of selected products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 22\n        }, this),\n        onClick: handleBack,\n        sx: {\n          mb: 3\n        },\n        children: \"Back to Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), !loading && products.length === 0 && /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"No Products Selected for Comparison\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: \"Please select at least two products to compare their environmental impact.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleBack,\n          startIcon: /*#__PURE__*/_jsxDEV(CompareArrowsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 26\n          }, this),\n          children: \"Select Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          py: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mt: 2\n          },\n          children: \"Loading comparison data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), !loading && products.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [bestProduct && /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            mb: 4,\n            borderLeft: '5px solid #43a047'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 8,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                gutterBottom: true,\n                children: \"Most Eco-Friendly Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"primary.main\",\n                gutterBottom: true,\n                children: bestProduct.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [(_analyses$getProductI = analyses[getProductId(bestProduct)]) === null || _analyses$getProductI === void 0 ? void 0 : _analyses$getProductI.explanation.split('.')[0], \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              sx: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                className: `analysis-score-circle ${getScoreColorClass((_analyses$getProductI2 = analyses[getProductId(bestProduct)]) === null || _analyses$getProductI2 === void 0 ? void 0 : _analyses$getProductI2.scores.overall)}`,\n                sx: {\n                  width: 100,\n                  height: 100,\n                  fontSize: '2rem',\n                  mb: 1,\n                  mx: 'auto'\n                },\n                children: (_analyses$getProductI3 = analyses[getProductId(bestProduct)]) === null || _analyses$getProductI3 === void 0 ? void 0 : _analyses$getProductI3.scores.overall\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Overall Environment Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          sx: {\n            mb: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                sx: {\n                  backgroundColor: 'primary.main'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    color: 'white',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  sx: {\n                    color: 'white',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Overall\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  sx: {\n                    color: 'white',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Carbon Footprint\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  sx: {\n                    color: 'white',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Water Usage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  sx: {\n                    color: 'white',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Resource Consumption\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: products.map(product => {\n                const productId = getProductId(product);\n                const analysis = analyses[productId];\n                if (!analysis) return null;\n                const isBestOverall = bestProduct && getProductId(bestProduct) === productId;\n                const isBestCarbon = getProductId(getBestForCategory('carbon')) === productId;\n                const isBestWater = getProductId(getBestForCategory('water')) === productId;\n                const isBestResources = getProductId(getBestForCategory('resources')) === productId;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  sx: {\n                    backgroundColor: isBestOverall ? 'rgba(67, 160, 71, 0.08)' : 'inherit'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        component: \"img\",\n                        src: product.imageUrl || `https://via.placeholder.com/50x50?text=${encodeURIComponent(product.name)}`,\n                        alt: product.name,\n                        sx: {\n                          width: 50,\n                          height: 50,\n                          mr: 2,\n                          objectFit: 'cover',\n                          borderRadius: 1\n                        },\n                        onError: e => {\n                          e.target.src = `https://via.placeholder.com/50x50?text=${encodeURIComponent(product.name)}`;\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 497,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle1\",\n                          children: product.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 507,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"text.secondary\",\n                          children: product.category\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 508,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 506,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        sx: {\n                          color: getScoreColor(analysis.scores.overall),\n                          fontWeight: 'bold'\n                        },\n                        children: analysis.scores.overall\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 514,\n                        columnNumber: 29\n                      }, this), isBestOverall && /*#__PURE__*/_jsxDEV(Chip, {\n                        label: \"BEST\",\n                        size: \"small\",\n                        color: \"success\",\n                        sx: {\n                          ml: 1,\n                          height: 20\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 524,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        sx: {\n                          color: getScoreColor(analysis.scores.carbon),\n                          fontWeight: 'bold'\n                        },\n                        children: analysis.scores.carbon\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 29\n                      }, this), isBestCarbon && /*#__PURE__*/_jsxDEV(Chip, {\n                        label: \"BEST\",\n                        size: \"small\",\n                        color: \"success\",\n                        sx: {\n                          ml: 1,\n                          height: 20\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 545,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        sx: {\n                          color: getScoreColor(analysis.scores.water),\n                          fontWeight: 'bold'\n                        },\n                        children: analysis.scores.water\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 556,\n                        columnNumber: 29\n                      }, this), isBestWater && /*#__PURE__*/_jsxDEV(Chip, {\n                        label: \"BEST\",\n                        size: \"small\",\n                        color: \"success\",\n                        sx: {\n                          ml: 1,\n                          height: 20\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 566,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        sx: {\n                          color: getScoreColor(analysis.scores.resources),\n                          fontWeight: 'bold'\n                        },\n                        children: analysis.scores.resources\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 577,\n                        columnNumber: 29\n                      }, this), isBestResources && /*#__PURE__*/_jsxDEV(Chip, {\n                        label: \"BEST\",\n                        size: \"small\",\n                        color: \"success\",\n                        sx: {\n                          ml: 1,\n                          height: 20\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 587,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 576,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 25\n                  }, this)]\n                }, productId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          sx: {\n            mt: 4\n          },\n          children: \"Product Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: products.map(product => {\n            const productId = getProductId(product);\n            const analysis = analyses[productId];\n            if (!analysis) return null;\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              lg: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                elevation: 3,\n                sx: {\n                  height: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                  component: \"img\",\n                  height: \"200\",\n                  image: product.imageUrl || `https://via.placeholder.com/300x200?text=${encodeURIComponent(product.name)}`,\n                  alt: product.name,\n                  onError: e => {\n                    e.target.src = `https://via.placeholder.com/300x200?text=${encodeURIComponent(product.name)}`;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    gutterBottom: true,\n                    children: product.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: product.category,\n                    size: \"small\",\n                    sx: {\n                      mb: 2\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      mb: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Overall Score:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 637,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: getScoreColor(analysis.scores.overall),\n                        fontWeight: 'bold',\n                        marginLeft: 8\n                      },\n                      children: analysis.scores.overall\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                    sx: {\n                      my: 2\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    gutterBottom: true,\n                    children: \"Environmental Impact\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 645,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      mb: 2\n                    },\n                    children: [analysis.explanation.split('.')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                    sx: {\n                      my: 2\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    gutterBottom: true,\n                    children: \"Materials\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 654,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      mb: 1\n                    },\n                    children: Array.isArray(product.materials) ? product.materials.join(', ') : 'Not specified'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    gutterBottom: true,\n                    sx: {\n                      mt: 1\n                    },\n                    children: \"Made in\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: product.manufacturingLocation || 'Not specified'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 21\n              }, this)\n            }, productId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mt: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"Note: In development mode, this page uses simulated analysis data. In production, real API data will be used.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n_s(ComparisonPage, \"8Iihw8TkY++MNixH9/fvc9Lvdyo=\", false, function () {\n  return [useNavigate, useLocation, useAppContext];\n});\n_c = ComparisonPage;\nexport default ComparisonPage;\nvar _c;\n$RefreshReg$(_c, \"ComparisonPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useLocation","useNavigate","Box","Container","Typography","Grid","Paper","CircularProgress","Button","Card","CardContent","CardMedia","Divider","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","ArrowBackIcon","CompareArrowsIcon","productAPI","analysisAPI","useAppContext","jsxDEV","_jsxDEV","Fragment","_Fragment","mockAnalyses","id","scores","overall","carbon","water","resources","explanation","suggestions","ComparisonPage","_s","_params$get","_analyses$getProductI","_analyses$getProductI2","_analyses$getProductI3","navigate","location","selectedProducts","selectedProductObjects","getProductId","loading","setLoading","error","setError","products","setProducts","analyses","setAnalyses","params","URLSearchParams","search","productIdsFromURL","get","split","productIds","length","createMockAnalysis","product","Math","round","random","category","materials","join","manufacturingLocation","fetchAnalysesForProducts","productsToAnalyze","analysisResults","process","env","NODE_ENV","productId","response","getAnalysisByProductId","data","err","console","fetchProductData","log","relevantProducts","filter","includes","fetchedProducts","getProductById","push","mockProducts","name","description","imageUrl","mockProduct","find","p","message","handleBack","getScoreColorClass","score","getScoreColor","getBestProduct","Object","keys","bestId","bestScore","analysis","getBestForCategory","bestProduct","className","children","sx","pt","pb","backgroundColor","color","maxWidth","component","variant","gutterBottom","fontWeight","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","mb","py","startIcon","onClick","severity","elevation","paragraph","size","mt","borderLeft","container","spacing","alignItems","item","xs","md","width","height","fontSize","mx","align","map","isBestOverall","isBestCarbon","isBestWater","isBestResources","scope","display","src","encodeURIComponent","alt","mr","objectFit","borderRadius","onError","e","target","justifyContent","label","ml","lg","image","style","marginLeft","my","Array","isArray","_c","$RefreshReg$"],"sources":["/Users/deocherisme/environmental-impact-analyzer/frontend/src/pages/ComparisonPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  Paper,\n  CircularProgress,\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\n\n// Import the API service and context\nimport { productAPI, analysisAPI } from '../services/api';\nimport { useAppContext } from '../context/AppContext';\n\n// Mock analysis data for development\nconst mockAnalyses = {\n  '1': {\n    id: 'a1',\n    scores: {\n      overall: 8.2,\n      carbon: 7.5,\n      water: 8.7,\n      resources: 8.4\n    },\n    explanation: \"This eco-friendly smartphone is designed with sustainability in mind. Made with recycled materials and built for easy repair and recycling at end of life. The use of recycled aluminum and plastic reduces resource consumption, and the manufacturing location in Germany typically means stricter environmental regulations.\",\n    suggestions: \"Consider implementing a take-back program. Increase use of renewable energy in manufacturing. Source materials closer to production facility to reduce transportation impacts.\"\n  },\n  '2': {\n    id: 'a2',\n    scores: {\n      overall: 8.5,\n      carbon: 7.8,\n      water: 6.5,\n      resources: 9.2\n    },\n    explanation: \"This organic cotton t-shirt has a positive environmental impact compared to conventional cotton products. Organic cotton production significantly reduces pesticide and synthetic fertilizer use. Manufacturing in Portugal ensures ethical production standards and reduces transportation emissions for European markets.\",\n    suggestions: \"Consider using natural or low-impact dyes. Implement water recycling in the manufacturing process. Source cotton from regenerative farms.\"\n  },\n  '3': {\n    id: 'a3',\n    scores: {\n      overall: 9.0,\n      carbon: 8.9,\n      water: 9.2,\n      resources: 9.1\n    },\n    explanation: \"These bamboo kitchen utensils have an excellent environmental profile. Bamboo is a rapidly renewable resource with limited water requirements. The manufacturing in Vietnam is close to the bamboo source, reducing transportation impacts. The product is naturally biodegradable at end of life.\",\n    suggestions: \"Ensure fair labor practices in bamboo harvesting. Consider using solar energy in manufacturing. Use plastic-free packaging.\"\n  },\n  '4': {\n    id: 'a4',\n    scores: {\n      overall: 7.8,\n      carbon: 7.5,\n      water: 8.0,\n      resources: 7.9\n    },\n    explanation: \"This solar-powered power bank offers good environmental benefits by utilizing renewable energy. The use of recycled plastic in construction is commendable. Manufacturing in China may increase carbon footprint due to transportation and potentially coal-based electricity usage.\",\n    suggestions: \"Increase the percentage of recycled materials. Source components locally to manufacturing location. Improve end-of-life recyclability through better design.\"\n  },\n  '5': {\n    id: 'a5',\n    scores: {\n      overall: 8.7,\n      carbon: 8.3,\n      water: 9.0,\n      resources: 8.8\n    },\n    explanation: \"This plant-based laundry detergent offers significant environmental benefits. The use of plant extracts and natural enzymes reduces aquatic toxicity and biodegrades readily. Manufacturing in the USA reduces transportation impacts for North American markets.\",\n    suggestions: \"Consider concentrated formulation to reduce packaging and transportation impacts. Use recycled plastic in packaging or explore plastic-free alternatives.\"\n  },\n  '6': {\n    id: 'a6',\n    scores: {\n      overall: 8.9,\n      carbon: 8.7,\n      water: 8.5,\n      resources: 9.5\n    },\n    explanation: \"This recycled paper notebook has excellent resource efficiency. 100% recycled paper significantly reduces virgin resource consumption and waste. Vegetable-based inks eliminate toxic heavy metals and improve recyclability. Manufacturing in Canada ensures strong environmental regulations.\",\n    suggestions: \"Consider using renewable energy in manufacturing. Explore plastic-free binding options. Ensure FSC certification for any virgin paper components.\"\n  }\n};\n\nfunction ComparisonPage() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  // Get context to access selected product objects\n  const { selectedProducts, selectedProductObjects, getProductId } = useAppContext();\n  \n  // States\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [products, setProducts] = useState([]);\n  const [analyses, setAnalyses] = useState({});\n  \n  // Parse product IDs from URL or use context\n  const params = new URLSearchParams(location.search);\n  const productIdsFromURL = params.get('products')?.split(',') || [];\n  const productIds = productIdsFromURL.length > 0 ? productIdsFromURL : selectedProducts;\n  \n  // Helper to create a mock analysis for a product - define before it's used\n  const createMockAnalysis = useCallback((product) => {\n    const scores = {\n      overall: Math.round((6 + Math.random() * 4) * 10) / 10,\n      carbon: Math.round((6 + Math.random() * 4) * 10) / 10,\n      water: Math.round((6 + Math.random() * 4) * 10) / 10,\n      resources: Math.round((6 + Math.random() * 4) * 10) / 10\n    };\n    \n    return {\n      id: `mock-${getProductId(product)}`,\n      scores,\n      explanation: `This ${product.category} product has a moderate to good environmental impact. ${\n        product.materials ? `It is made from ${product.materials.join(', ')}.` : ''\n      } ${\n        product.manufacturingLocation ? `Manufacturing in ${product.manufacturingLocation} impacts its overall footprint.` : ''\n      }`,\n      suggestions: \"Consider sustainable sourcing of materials. Reduce packaging waste. Implement renewable energy in manufacturing.\"\n    };\n  }, [getProductId]);\n  \n  // Helper function to fetch analyses for products\n  const fetchAnalysesForProducts = useCallback(async (productsToAnalyze) => {\n    const analysisResults = {};\n    \n    // Use mock data in development mode\n    if (process.env.NODE_ENV === 'development') {\n      for (const product of productsToAnalyze) {\n        const productId = getProductId(product);\n        // Use mockAnalyses directly without adding it as a dependency\n        analysisResults[productId] = mockAnalyses[productId] || createMockAnalysis(product);\n      }\n      setAnalyses(analysisResults);\n      return;\n    }\n    \n    // In production, fetch real analyses\n    for (const product of productsToAnalyze) {\n      const productId = getProductId(product);\n      try {\n        const response = await analysisAPI.getAnalysisByProductId(productId);\n        analysisResults[productId] = response.data;\n      } catch (err) {\n        console.error(`Error fetching analysis for product ${productId}:`, err);\n        // Use mock data as fallback, referencing mockAnalyses directly\n        analysisResults[productId] = mockAnalyses[productId] || createMockAnalysis(product);\n      }\n    }\n    \n    setAnalyses(analysisResults);\n  }, [createMockAnalysis, getProductId]); // removed mockAnalyses as dependency\n  \n  // Fetch products and their analyses\n  useEffect(() => {\n    const fetchProductData = async () => {\n      if (productIds.length === 0) {\n        return;\n      }\n      \n      console.log('Fetching products for IDs:', productIds);\n      setLoading(true);\n      setError('');\n      \n      try {\n        // Try to use stored product objects first\n        if (selectedProductObjects.length >= productIds.length) {\n          console.log('Using stored product objects:', selectedProductObjects);\n          \n          // Filter to only the products we need\n          const relevantProducts = selectedProductObjects.filter(\n            product => productIds.includes(getProductId(product))\n          );\n          \n          if (relevantProducts.length === productIds.length) {\n            setProducts(relevantProducts);\n            \n            // Now fetch analyses for these products\n            await fetchAnalysesForProducts(relevantProducts);\n            return;\n          }\n        }\n        \n        // Fallback: Fetch products from API\n        console.log('Fetching products from API as fallback');\n        const fetchedProducts = [];\n        \n        for (const id of productIds) {\n          try {\n            const response = await productAPI.getProductById(id);\n            fetchedProducts.push(response.data);\n          } catch (err) {\n            console.error(`Error fetching product with ID ${id}:`, err);\n            // If in development, use mock data\n            if (process.env.NODE_ENV === 'development') {\n              // Find the product from our mock list based on ID\n              const mockProducts = [\n                {\n                  id: '1',\n                  name: 'Eco-Friendly Smartphone',\n                  category: 'Electronics',\n                  description: 'Made with recycled materials and designed for easy repair and recycling at end of life.',\n                  materials: ['Recycled Aluminum', 'Recycled Plastic', 'Glass'],\n                  manufacturingLocation: 'Germany',\n                  imageUrl: '/pic/Eco-Friendly Smartphone.jpg'\n                },\n                {\n                  id: '2',\n                  name: 'Organic Cotton T-Shirt',\n                  category: 'Clothing',\n                  description: 'Made with 100% organic cotton grown without harmful pesticides or synthetic fertilizers.',\n                  materials: ['Organic Cotton'],\n                  manufacturingLocation: 'Portugal',\n                  imageUrl: '/pic/Organic Cotton T-Shirt.jpg'\n                },\n                {\n                  id: '3',\n                  name: 'Bamboo Kitchen Utensils',\n                  category: 'Home Goods',\n                  description: 'Sustainable bamboo kitchen utensils that are biodegradable and renewable.',\n                  materials: ['Bamboo'],\n                  manufacturingLocation: 'Vietnam',\n                  imageUrl: '/pic/Bamboo Kitchen Utensils.jpg'\n                },\n                {\n                  id: '4',\n                  name: 'Solar-Powered Power Bank',\n                  category: 'Electronics',\n                  description: 'Charge your devices using clean solar energy. Includes recycled components.',\n                  materials: ['Recycled Plastic', 'Silicon', 'Lithium Battery'],\n                  manufacturingLocation: 'China',\n                  imageUrl: '/pic/Solar-Powered Power Bank.jpg'\n                },\n                {\n                  id: '5',\n                  name: 'Plant-Based Laundry Detergent',\n                  category: 'Home Goods',\n                  description: 'Biodegradable laundry detergent made from plant-derived ingredients.',\n                  materials: ['Plant Extracts', 'Natural Enzymes'],\n                  manufacturingLocation: 'USA',\n                  imageUrl: '/pic/Plant-Based Laundry Detergent.jpg'\n                },\n                {\n                  id: '6',\n                  name: 'Recycled Paper Notebook',\n                  category: 'Home Goods',\n                  description: '100% recycled paper notebook with vegetable-based ink printing.',\n                  materials: ['Recycled Paper', 'Vegetable Ink'],\n                  manufacturingLocation: 'Canada',\n                  imageUrl: '/pic/Recycled Paper Notebook.jpg'\n                }\n              ];\n              \n              const mockProduct = mockProducts.find(p => p.id === id);\n              if (mockProduct) {\n                fetchedProducts.push(mockProduct);\n              }\n            }\n          }\n        }\n        \n        if (fetchedProducts.length > 0) {\n          setProducts(fetchedProducts);\n          \n          // Now fetch analyses for these products\n          await fetchAnalysesForProducts(fetchedProducts);\n        } else {\n          setError('No products could be found for comparison.');\n        }\n      } catch (err) {\n        console.error('Error fetching comparison data:', err);\n        setError(err.message || 'Failed to load comparison data. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchProductData();\n  }, [productIds, selectedProductObjects, fetchAnalysesForProducts, getProductId]);\n  \n  // Navigate back to products\n  const handleBack = () => {\n    navigate('/');\n  };\n  \n  // Get score color class\n  const getScoreColorClass = (score) => {\n    if (score >= 9) return 'score-excellent';\n    else if (score >= 7) return 'score-good';\n    else if (score >= 5) return 'score-average';\n    else if (score >= 3) return 'score-poor';\n    else return 'score-bad';\n  };\n  \n  // Get score color for styling\n  const getScoreColor = (score) => {\n    if (score >= 9) return '#43a047';\n    else if (score >= 7) return '#7cb342';\n    else if (score >= 5) return '#fdd835';\n    else if (score >= 3) return '#fb8c00';\n    else return '#e53935';\n  };\n  \n  // Find the best product based on overall score\n  const getBestProduct = () => {\n    if (Object.keys(analyses).length === 0 || products.length === 0) return null;\n    \n    let bestId = null;\n    let bestScore = -1;\n    \n    for (const product of products) {\n      const id = getProductId(product);\n      const analysis = analyses[id];\n      \n      if (analysis && analysis.scores.overall > bestScore) {\n        bestScore = analysis.scores.overall;\n        bestId = id;\n      }\n    }\n    \n    return products.find(p => getProductId(p) === bestId) || null;\n  };\n  \n  // Get best product for a specific category\n  const getBestForCategory = (category) => {\n    if (Object.keys(analyses).length === 0 || products.length === 0) return null;\n    \n    let bestId = null;\n    let bestScore = -1;\n    \n    for (const product of products) {\n      const id = getProductId(product);\n      const analysis = analyses[id];\n      \n      if (analysis && analysis.scores[category] > bestScore) {\n        bestScore = analysis.scores[category];\n        bestId = id;\n      }\n    }\n    \n    return products.find(p => getProductId(p) === bestId) || null;\n  };\n  \n  const bestProduct = getBestProduct();\n  \n  return (\n    <Box className=\"page-transition\">\n      {/* Header Section */}\n      <Box\n        sx={{\n          pt: 6,\n          pb: 6,\n          backgroundColor: 'primary.main',\n          color: 'white',\n        }}\n        className=\"eco-gradient-bg\"\n      >\n        <Container maxWidth=\"lg\">\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n            gutterBottom\n            sx={{ fontWeight: 'bold', textAlign: 'center' }}\n          >\n            Product Comparison\n          </Typography>\n          <Typography variant=\"h6\" sx={{ mb: 2, textAlign: 'center' }}>\n            Compare environmental impact of selected products\n          </Typography>\n        </Container>\n      </Box>\n      \n      <Container maxWidth=\"lg\" sx={{ py: 6 }}>\n        {/* Back Button */}\n        <Button \n          startIcon={<ArrowBackIcon />} \n          onClick={handleBack}\n          sx={{ mb: 3 }}\n        >\n          Back to Products\n        </Button>\n        \n        {/* Error Message */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n        \n        {/* No Products Selected */}\n        {!loading && products.length === 0 && (\n          <Paper elevation={3} sx={{ p: 4, textAlign: 'center' }}>\n            <Typography variant=\"h5\" gutterBottom>\n              No Products Selected for Comparison\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n              Please select at least two products to compare their environmental impact.\n            </Typography>\n            <Button \n              variant=\"contained\" \n              onClick={handleBack}\n              startIcon={<CompareArrowsIcon />}\n            >\n              Select Products\n            </Button>\n          </Paper>\n        )}\n        \n        {/* Loading State */}\n        {loading && (\n          <Box sx={{ textAlign: 'center', py: 4 }}>\n            <CircularProgress size={60} />\n            <Typography variant=\"h6\" sx={{ mt: 2 }}>\n              Loading comparison data...\n            </Typography>\n          </Box>\n        )}\n        \n        {/* Comparison Content */}\n        {!loading && products.length > 0 && (\n          <>\n            {/* Best Product */}\n            {bestProduct && (\n              <Paper elevation={3} sx={{ p: 3, mb: 4, borderLeft: '5px solid #43a047' }}>\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item xs={12} md={8}>\n                    <Typography variant=\"h5\" gutterBottom>\n                      Most Eco-Friendly Option\n                    </Typography>\n                    <Typography variant=\"h6\" color=\"primary.main\" gutterBottom>\n                      {bestProduct.name}\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      {analyses[getProductId(bestProduct)]?.explanation.split('.')[0]}.\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} md={4} sx={{ textAlign: 'center' }}>\n                    <Box \n                      className={`analysis-score-circle ${getScoreColorClass(analyses[getProductId(bestProduct)]?.scores.overall)}`}\n                      sx={{ width: 100, height: 100, fontSize: '2rem', mb: 1, mx: 'auto' }}\n                    >\n                      {analyses[getProductId(bestProduct)]?.scores.overall}\n                    </Box>\n                    <Typography variant=\"subtitle1\">\n                      Overall Environment Score\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Paper>\n            )}\n            \n            {/* Score Comparison Table */}\n            <TableContainer component={Paper} sx={{ mb: 4 }}>\n              <Table>\n                <TableHead>\n                  <TableRow sx={{ backgroundColor: 'primary.main' }}>\n                    <TableCell sx={{ color: 'white', fontWeight: 'bold' }}>Product</TableCell>\n                    <TableCell align=\"center\" sx={{ color: 'white', fontWeight: 'bold' }}>Overall</TableCell>\n                    <TableCell align=\"center\" sx={{ color: 'white', fontWeight: 'bold' }}>Carbon Footprint</TableCell>\n                    <TableCell align=\"center\" sx={{ color: 'white', fontWeight: 'bold' }}>Water Usage</TableCell>\n                    <TableCell align=\"center\" sx={{ color: 'white', fontWeight: 'bold' }}>Resource Consumption</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {products.map(product => {\n                    const productId = getProductId(product);\n                    const analysis = analyses[productId];\n                    \n                    if (!analysis) return null;\n                    \n                    const isBestOverall = bestProduct && getProductId(bestProduct) === productId;\n                    const isBestCarbon = getProductId(getBestForCategory('carbon')) === productId;\n                    const isBestWater = getProductId(getBestForCategory('water')) === productId;\n                    const isBestResources = getProductId(getBestForCategory('resources')) === productId;\n                    \n                    return (\n                      <TableRow key={productId} sx={{ backgroundColor: isBestOverall ? 'rgba(67, 160, 71, 0.08)' : 'inherit' }}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <Box\n                              component=\"img\"\n                              src={product.imageUrl || `https://via.placeholder.com/50x50?text=${encodeURIComponent(product.name)}`}\n                              alt={product.name}\n                              sx={{ width: 50, height: 50, mr: 2, objectFit: 'cover', borderRadius: 1 }}\n                              onError={(e) => {\n                                e.target.src = `https://via.placeholder.com/50x50?text=${encodeURIComponent(product.name)}`;\n                              }}\n                            />\n                            <Box>\n                              <Typography variant=\"subtitle1\">{product.name}</Typography>\n                              <Typography variant=\"body2\" color=\"text.secondary\">{product.category}</Typography>\n                            </Box>\n                          </Box>\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                            <Typography\n                              variant=\"h6\"\n                              sx={{\n                                color: getScoreColor(analysis.scores.overall),\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              {analysis.scores.overall}\n                            </Typography>\n                            {isBestOverall && (\n                              <Chip\n                                label=\"BEST\"\n                                size=\"small\"\n                                color=\"success\"\n                                sx={{ ml: 1, height: 20 }}\n                              />\n                            )}\n                          </Box>\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                            <Typography\n                              variant=\"h6\"\n                              sx={{\n                                color: getScoreColor(analysis.scores.carbon),\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              {analysis.scores.carbon}\n                            </Typography>\n                            {isBestCarbon && (\n                              <Chip\n                                label=\"BEST\"\n                                size=\"small\"\n                                color=\"success\"\n                                sx={{ ml: 1, height: 20 }}\n                              />\n                            )}\n                          </Box>\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                            <Typography\n                              variant=\"h6\"\n                              sx={{\n                                color: getScoreColor(analysis.scores.water),\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              {analysis.scores.water}\n                            </Typography>\n                            {isBestWater && (\n                              <Chip\n                                label=\"BEST\"\n                                size=\"small\"\n                                color=\"success\"\n                                sx={{ ml: 1, height: 20 }}\n                              />\n                            )}\n                          </Box>\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                            <Typography\n                              variant=\"h6\"\n                              sx={{\n                                color: getScoreColor(analysis.scores.resources),\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              {analysis.scores.resources}\n                            </Typography>\n                            {isBestResources && (\n                              <Chip\n                                label=\"BEST\"\n                                size=\"small\"\n                                color=\"success\"\n                                sx={{ ml: 1, height: 20 }}\n                              />\n                            )}\n                          </Box>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n            {/* Individual Product Cards */}\n            <Typography variant=\"h5\" gutterBottom sx={{ mt: 4 }}>\n              Product Details\n            </Typography>\n            <Grid container spacing={3}>\n              {products.map(product => {\n                const productId = getProductId(product);\n                const analysis = analyses[productId];\n                \n                if (!analysis) return null;\n                \n                return (\n                  <Grid item key={productId} xs={12} md={6} lg={4}>\n                    <Card elevation={3} sx={{ height: '100%' }}>\n                      <CardMedia\n                        component=\"img\"\n                        height=\"200\"\n                        image={product.imageUrl || `https://via.placeholder.com/300x200?text=${encodeURIComponent(product.name)}`}\n                        alt={product.name}\n                        onError={(e) => {\n                          e.target.src = `https://via.placeholder.com/300x200?text=${encodeURIComponent(product.name)}`;\n                        }}\n                      />\n                      <CardContent>\n                        <Typography variant=\"h6\" gutterBottom>\n                          {product.name}\n                        </Typography>\n                        <Chip \n                          label={product.category} \n                          size=\"small\" \n                          sx={{ mb: 2 }} \n                        />\n                        \n                        <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                          <strong>Overall Score:</strong> \n                          <span style={{ color: getScoreColor(analysis.scores.overall), fontWeight: 'bold', marginLeft: 8 }}>\n                            {analysis.scores.overall}\n                          </span>\n                        </Typography>\n                        \n                        <Divider sx={{ my: 2 }} />\n                        \n                        <Typography variant=\"subtitle2\" gutterBottom>\n                          Environmental Impact\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                          {analysis.explanation.split('.')[0]}.\n                        </Typography>\n                        \n                        <Divider sx={{ my: 2 }} />\n                        \n                        <Typography variant=\"subtitle2\" gutterBottom>\n                          Materials\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                          {Array.isArray(product.materials) ? product.materials.join(', ') : 'Not specified'}\n                        </Typography>\n                        \n                        <Typography variant=\"subtitle2\" gutterBottom sx={{ mt: 1 }}>\n                          Made in\n                        </Typography>\n                        <Typography variant=\"body2\">\n                          {product.manufacturingLocation || 'Not specified'}\n                        </Typography>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                );\n              })}\n            </Grid>\n            \n            {/* Alert about mock data in development */}\n            {process.env.NODE_ENV === 'development' && (\n              <Alert severity=\"info\" sx={{ mt: 4 }}>\n                <Typography variant=\"body2\">\n                  Note: In development mode, this page uses simulated analysis data. In production, real API data will be used.\n                </Typography>\n              </Alert>\n            )}\n          </>\n        )}\n      </Container>\n    </Box>\n  );\n}\n\nexport default ComparisonPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}