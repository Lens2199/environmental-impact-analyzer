{"ast":null,"code":"var _jsxFileName = \"/Users/deocherisme/environmental-impact-analyzer/frontend/src/components/common/ConfirmationDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, IconButton, Typography, Box } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\nimport InfoIcon from '@mui/icons-material/Info';\n\n/**\n * Reusable confirmation dialog component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmationDialog = ({\n  open,\n  title,\n  message,\n  confirmLabel = 'Confirm',\n  cancelLabel = 'Cancel',\n  onConfirm,\n  onCancel,\n  confirmColor = 'primary',\n  type = 'info',\n  fullWidth = true,\n  maxWidth = 'sm',\n  showIcon = true\n}) => {\n  // Define icon based on dialog type\n  let icon;\n  switch (type) {\n    case 'success':\n      icon = /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n        color: \"success\",\n        sx: {\n          fontSize: 32\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n      break;\n    case 'error':\n      icon = /*#__PURE__*/_jsxDEV(ErrorOutlineIcon, {\n        color: \"error\",\n        sx: {\n          fontSize: 32\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n      break;\n    case 'warning':\n      icon = /*#__PURE__*/_jsxDEV(WarningAmberIcon, {\n        color: \"warning\",\n        sx: {\n          fontSize: 32\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n      break;\n    case 'info':\n    default:\n      icon = /*#__PURE__*/_jsxDEV(InfoIcon, {\n        color: \"info\",\n        sx: {\n          fontSize: 32\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onCancel,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    \"aria-describedby\": \"confirmation-dialog-description\",\n    fullWidth: fullWidth,\n    maxWidth: maxWidth,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"confirmation-dialog-title\",\n      sx: {\n        pr: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [showIcon && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mr: 2\n          },\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        onClick: onCancel,\n        sx: {\n          position: 'absolute',\n          right: 16,\n          top: 12,\n          color: theme => theme.palette.grey[500]\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        id: \"confirmation-dialog-description\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      sx: {\n        px: 3,\n        pb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onCancel,\n        color: \"inherit\",\n        variant: \"outlined\",\n        sx: {\n          mr: 1\n        },\n        children: cancelLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onConfirm,\n        color: confirmColor,\n        variant: \"contained\",\n        autoFocus: true,\n        children: confirmLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = ConfirmationDialog;\nConfirmationDialog.propTypes = {\n  /** Whether the dialog is open */\n  open: PropTypes.bool.isRequired,\n  /** Dialog title */\n  title: PropTypes.string.isRequired,\n  /** Dialog message */\n  message: PropTypes.node.isRequired,\n  /** Label for the confirm button */\n  confirmLabel: PropTypes.string,\n  /** Label for the cancel button */\n  cancelLabel: PropTypes.string,\n  /** Function called when confirm button is clicked */\n  onConfirm: PropTypes.func.isRequired,\n  /** Function called when cancel button is clicked or dialog is closed */\n  onCancel: PropTypes.func.isRequired,\n  /** Color of the confirm button */\n  confirmColor: PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']),\n  /** Type of dialog, affects the icon shown */\n  type: PropTypes.oneOf(['info', 'success', 'warning', 'error']),\n  /** Whether the dialog should take up the full width */\n  fullWidth: PropTypes.bool,\n  /** Maximum width of the dialog */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n  /** Whether to show the icon */\n  showIcon: PropTypes.bool\n};\nexport default ConfirmationDialog;\nvar _c;\n$RefreshReg$(_c, \"ConfirmationDialog\");","map":{"version":3,"names":["React","PropTypes","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","IconButton","Typography","Box","CloseIcon","CheckCircleIcon","ErrorOutlineIcon","WarningAmberIcon","InfoIcon","jsxDEV","_jsxDEV","ConfirmationDialog","open","title","message","confirmLabel","cancelLabel","onConfirm","onCancel","confirmColor","type","fullWidth","maxWidth","showIcon","icon","color","sx","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClose","children","id","pr","display","alignItems","mr","variant","component","onClick","position","right","top","theme","palette","grey","px","pb","autoFocus","_c","propTypes","bool","isRequired","string","node","func","oneOf","$RefreshReg$"],"sources":["/Users/deocherisme/environmental-impact-analyzer/frontend/src/components/common/ConfirmationDialog.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  IconButton,\n  Typography,\n  Box\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\nimport InfoIcon from '@mui/icons-material/Info';\n\n/**\n * Reusable confirmation dialog component\n */\nconst ConfirmationDialog = ({\n  open,\n  title,\n  message,\n  confirmLabel = 'Confirm',\n  cancelLabel = 'Cancel',\n  onConfirm,\n  onCancel,\n  confirmColor = 'primary',\n  type = 'info',\n  fullWidth = true,\n  maxWidth = 'sm',\n  showIcon = true\n}) => {\n  // Define icon based on dialog type\n  let icon;\n  switch (type) {\n    case 'success':\n      icon = <CheckCircleIcon color=\"success\" sx={{ fontSize: 32 }} />;\n      break;\n    case 'error':\n      icon = <ErrorOutlineIcon color=\"error\" sx={{ fontSize: 32 }} />;\n      break;\n    case 'warning':\n      icon = <WarningAmberIcon color=\"warning\" sx={{ fontSize: 32 }} />;\n      break;\n    case 'info':\n    default:\n      icon = <InfoIcon color=\"info\" sx={{ fontSize: 32 }} />;\n  }\n  \n  return (\n    <Dialog\n      open={open}\n      onClose={onCancel}\n      aria-labelledby=\"confirmation-dialog-title\"\n      aria-describedby=\"confirmation-dialog-description\"\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\" sx={{ pr: 8 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          {showIcon && (\n            <Box sx={{ mr: 2 }}>\n              {icon}\n            </Box>\n          )}\n          <Typography variant=\"h6\" component=\"div\">\n            {title}\n          </Typography>\n        </Box>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onCancel}\n          sx={{\n            position: 'absolute',\n            right: 16,\n            top: 12,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      \n      <DialogContent>\n        <DialogContentText id=\"confirmation-dialog-description\">\n          {message}\n        </DialogContentText>\n      </DialogContent>\n      \n      <DialogActions sx={{ px: 3, pb: 2 }}>\n        <Button \n          onClick={onCancel} \n          color=\"inherit\" \n          variant=\"outlined\"\n          sx={{ mr: 1 }}\n        >\n          {cancelLabel}\n        </Button>\n        <Button \n          onClick={onConfirm} \n          color={confirmColor}\n          variant=\"contained\"\n          autoFocus\n        >\n          {confirmLabel}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nConfirmationDialog.propTypes = {\n  /** Whether the dialog is open */\n  open: PropTypes.bool.isRequired,\n  /** Dialog title */\n  title: PropTypes.string.isRequired,\n  /** Dialog message */\n  message: PropTypes.node.isRequired,\n  /** Label for the confirm button */\n  confirmLabel: PropTypes.string,\n  /** Label for the cancel button */\n  cancelLabel: PropTypes.string,\n  /** Function called when confirm button is clicked */\n  onConfirm: PropTypes.func.isRequired,\n  /** Function called when cancel button is clicked or dialog is closed */\n  onCancel: PropTypes.func.isRequired,\n  /** Color of the confirm button */\n  confirmColor: PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']),\n  /** Type of dialog, affects the icon shown */\n  type: PropTypes.oneOf(['info', 'success', 'warning', 'error']),\n  /** Whether the dialog should take up the full width */\n  fullWidth: PropTypes.bool,\n  /** Maximum width of the dialog */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n  /** Whether to show the icon */\n  showIcon: PropTypes.bool\n};\n\nexport default ConfirmationDialog;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}