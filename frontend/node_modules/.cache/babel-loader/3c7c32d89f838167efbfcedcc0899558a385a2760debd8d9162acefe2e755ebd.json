{"ast":null,"code":"var _jsxFileName = \"/Users/deocherisme/environmental-impact-analyzer/frontend/src/pages/ComparisonPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Box, Container, Typography, Paper, Grid, Button, Divider, CircularProgress, Alert, Chip, Card, CardContent, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tooltip, LinearProgress } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport EcoIcon from '../components/icons/EcoIcon';\nimport ShareIcon from '@mui/icons-material/Share';\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\nimport AddIcon from '@mui/icons-material/Add';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// Import API services\nimport { productAPI, analysisAPI } from '../services/api';\n\n// Helper function to safely get product IDs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getProductId = product => {\n  if (!product) return null;\n  return product._id || product.id || null;\n};\n\n// Component to display score with bar\nconst ScoreBar = ({\n  score,\n  label,\n  productIndex = 0\n}) => {\n  let color = '';\n  if (score >= 9) color = '#43a047'; // excellent\n  else if (score >= 7) color = '#7cb342'; // good\n  else if (score >= 5) color = '#fdd835'; // average\n  else if (score >= 3) color = '#fb8c00'; // poor\n  else color = '#e53935'; // bad\n\n  // Offset the bars slightly for better visualization\n  const offsetPercentage = productIndex * 2;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        fontWeight: \"bold\",\n        children: [score, \"/10\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        height: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: score * 10,\n        sx: {\n          height: 20,\n          borderRadius: 1,\n          backgroundColor: 'rgba(0,0,0,0.1)',\n          '& .MuiLinearProgress-bar': {\n            backgroundColor: color,\n            transition: 'transform 0.8s ease-in-out'\n          },\n          mt: `${offsetPercentage}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n// Mock data generator for analyses\n_c = ScoreBar;\nconst generateMockAnalysis = (productId, productName) => {\n  // Generate random scores between 3 and 9\n  const carbonScore = Math.floor(Math.random() * 7) + 3;\n  const waterScore = Math.floor(Math.random() * 7) + 3;\n  const resourcesScore = Math.floor(Math.random() * 7) + 3;\n  const overallScore = Math.round((carbonScore + waterScore + resourcesScore) / 3);\n  return {\n    id: `mock-${productId}`,\n    product: productId,\n    scores: {\n      carbon: carbonScore,\n      water: waterScore,\n      resources: resourcesScore,\n      overall: overallScore\n    },\n    explanation: `This is a simulated environmental analysis for ${productName}. The product has been given scores based on typical values for its category.`,\n    suggestions: \"Consider analyzing this product for real environmental impact data.\",\n    createdAt: new Date().toISOString()\n  };\n};\nfunction ComparisonPage() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryParams = useMemo(() => new URLSearchParams(location.search), [location.search]);\n\n  // Use useMemo to prevent recreation of productIds on every render\n  const productIds = useMemo(() => {\n    return queryParams.get('products') ? queryParams.get('products').split(',') : [];\n  }, [queryParams]);\n  const [products, setProducts] = useState([]);\n  const [analyses, setAnalyses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [comparison, setComparison] = useState(null);\n  const [usedMockData, setUsedMockData] = useState(false);\n\n  // Fetch product and analysis data\n  const fetchData = useCallback(async () => {\n    // Validate product IDs first\n    const validProductIds = productIds.filter(id => id && id !== 'undefined');\n    if (validProductIds.length === 0) {\n      setError('No valid products selected for comparison.');\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setUsedMockData(false);\n    try {\n      console.log('Fetching products for IDs:', validProductIds);\n\n      // Use real API calls to fetch products\n      const productPromises = validProductIds.map(id => productAPI.getProductById(id));\n      const productResponses = await Promise.all(productPromises);\n\n      // Normalize product data to handle both _id and id fields\n      const fetchedProducts = productResponses.map(response => {\n        const product = response.data;\n        return {\n          ...product,\n          _id: getProductId(product) // Ensure _id field exists\n        };\n      }).filter(product => !!product._id); // Filter out any invalid products\n\n      console.log('Fetched products:', fetchedProducts);\n      setProducts(fetchedProducts);\n\n      // Try to fetch analyses, but use mock data if the API fails\n      let fetchedAnalyses = [];\n      try {\n        // Try to fetch analyses with Promise.allSettled to handle partial failures\n        const analysisPromises = validProductIds.map(id => analysisAPI.getProductAnalysis(id));\n        const analysisResults = await Promise.allSettled(analysisPromises);\n\n        // Extract data from successful responses\n        const successfulResults = analysisResults.filter(result => {\n          var _result$value;\n          return result.status === 'fulfilled' && ((_result$value = result.value) === null || _result$value === void 0 ? void 0 : _result$value.data);\n        }).map(result => result.value.data);\n\n        // Check if we found any valid analyses\n        if (successfulResults.length > 0) {\n          fetchedAnalyses = successfulResults;\n          console.log('Successfully fetched analyses:', fetchedAnalyses);\n        } else {\n          // If no analyses were found, generate mock data\n          console.log('No analyses found, generating mock data');\n          fetchedAnalyses = fetchedProducts.map(product => generateMockAnalysis(getProductId(product), product.name));\n          setUsedMockData(true);\n          console.log('Generated mock analyses:', fetchedAnalyses);\n        }\n      } catch (analysisError) {\n        console.error('Error fetching analyses, using mock data instead:', analysisError);\n        // Generate mock analyses for all products\n        fetchedAnalyses = fetchedProducts.map(product => generateMockAnalysis(getProductId(product), product.name));\n        setUsedMockData(true);\n        console.log('Generated mock analyses after error:', fetchedAnalyses);\n      }\n      setAnalyses(fetchedAnalyses);\n\n      // Generate comparison data\n      if (fetchedProducts.length > 1 && fetchedAnalyses.length > 0) {\n        try {\n          // Try the API first\n          const comparisonResponse = await analysisAPI.compareProducts(validProductIds);\n          setComparison(comparisonResponse.data);\n        } catch (compError) {\n          console.error('Error generating comparison, using fallback:', compError);\n\n          // Create a fallback comparison\n          createAndSetFallbackComparison(fetchedProducts, fetchedAnalyses);\n        }\n      } else if (fetchedProducts.length > 1) {\n        // Not enough analyses for comparison, create fallback\n        createAndSetFallbackComparison(fetchedProducts, fetchedAnalyses);\n      } else {\n        // Not enough products for comparison\n        setError('At least 2 products are needed for comparison.');\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching comparison data:', err);\n      setError(err.message || 'Failed to load comparison data. Please try again.');\n      setLoading(false);\n    }\n  }, [productIds]);\n\n  // Helper function to create and set fallback comparison\n  const createAndSetFallbackComparison = (products, analyses) => {\n    if (!analyses || analyses.length === 0) {\n      console.warn('No analyses available for comparison');\n      return;\n    }\n    try {\n      var _bestProductAnalysis$;\n      // Calculate average scores\n      const avgCarbon = analyses.reduce((sum, a) => {\n        var _a$scores;\n        return sum + (((_a$scores = a.scores) === null || _a$scores === void 0 ? void 0 : _a$scores.carbon) || 0);\n      }, 0) / analyses.length;\n      const avgWater = analyses.reduce((sum, a) => {\n        var _a$scores2;\n        return sum + (((_a$scores2 = a.scores) === null || _a$scores2 === void 0 ? void 0 : _a$scores2.water) || 0);\n      }, 0) / analyses.length;\n      const avgResources = analyses.reduce((sum, a) => {\n        var _a$scores3;\n        return sum + (((_a$scores3 = a.scores) === null || _a$scores3 === void 0 ? void 0 : _a$scores3.resources) || 0);\n      }, 0) / analyses.length;\n      const avgOverall = analyses.reduce((sum, a) => {\n        var _a$scores4;\n        return sum + (((_a$scores4 = a.scores) === null || _a$scores4 === void 0 ? void 0 : _a$scores4.overall) || 0);\n      }, 0) / analyses.length;\n\n      // Find best product (highest overall score)\n      const sortedAnalyses = [...analyses].sort((a, b) => {\n        var _b$scores, _a$scores5;\n        return (((_b$scores = b.scores) === null || _b$scores === void 0 ? void 0 : _b$scores.overall) || 0) - (((_a$scores5 = a.scores) === null || _a$scores5 === void 0 ? void 0 : _a$scores5.overall) || 0);\n      });\n      const bestProductAnalysis = sortedAnalyses[0];\n      const bestProductId = bestProductAnalysis.product;\n      const bestProduct = products.find(p => getProductId(p) === bestProductId) || products[0];\n      const fallbackComparison = {\n        bestProduct: {\n          id: getProductId(bestProduct),\n          name: bestProduct.name,\n          score: ((_bestProductAnalysis$ = bestProductAnalysis.scores) === null || _bestProductAnalysis$ === void 0 ? void 0 : _bestProductAnalysis$.overall) || 5\n        },\n        averageScores: {\n          carbon: avgCarbon || 5,\n          water: avgWater || 5,\n          resources: avgResources || 5,\n          overall: avgOverall || 5\n        }\n      };\n      console.log('Created fallback comparison:', fallbackComparison);\n      setComparison(fallbackComparison);\n    } catch (error) {\n      console.error('Error creating fallback comparison:', error);\n    }\n  };\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Handle removing a product from comparison\n  const handleRemoveProduct = productId => {\n    if (!productId) return;\n    const updatedProductIds = productIds.filter(id => id !== productId);\n    if (updatedProductIds.length < 2) {\n      // Redirect to product page if only one product left\n      if (updatedProductIds.length === 1) {\n        navigate(`/products/${updatedProductIds[0]}`);\n      } else {\n        navigate('/search');\n      }\n    } else {\n      navigate(`/compare?products=${updatedProductIds.join(',')}`);\n    }\n  };\n\n  // Handle adding another product\n  const handleAddProduct = () => {\n    navigate('/search');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '60vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(CompareArrowsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 22\n        }, this),\n        onClick: () => navigate('/search'),\n        children: \"Select Products to Compare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"page-transition\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        pt: 6,\n        pb: 6,\n        backgroundColor: 'primary.main',\n        color: 'white'\n      },\n      className: \"eco-gradient-bg\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          gutterBottom: true,\n          sx: {\n            fontWeight: 'bold',\n            textAlign: 'center'\n          },\n          children: \"Product Comparison\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mb: 4,\n            textAlign: 'center'\n          },\n          children: \"Compare environmental impact and features of selected products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 4\n      },\n      children: [usedMockData && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mb: 4\n        },\n        children: \"Note: Using simulated environmental impact data for comparison purposes. For accurate analysis, use the Analyze button on each product.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), comparison && /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 3,\n          mb: 4,\n          borderRadius: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Comparison Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                    sx: {\n                      color: 'success.main',\n                      mr: 1,\n                      verticalAlign: 'middle'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 23\n                  }, this), \"Most Environmentally Friendly Option\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    sx: {\n                      mr: 1\n                    },\n                    children: comparison.bestProduct.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: `Score: ${comparison.bestProduct.score}/10`,\n                    color: \"primary\",\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Average Environmental Scores\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        mb: 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          mr: 1\n                        },\n                        children: \"Carbon Footprint:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 387,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        fontWeight: \"bold\",\n                        children: [comparison.averageScores.carbon.toFixed(1), \"/10\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 388,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          mr: 1\n                        },\n                        children: \"Water Usage:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 393,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        fontWeight: \"bold\",\n                        children: [comparison.averageScores.water.toFixed(1), \"/10\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 392,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        mb: 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          mr: 1\n                        },\n                        children: \"Resource Use:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 401,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        fontWeight: \"bold\",\n                        children: [comparison.averageScores.resources.toFixed(1), \"/10\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          mr: 1\n                        },\n                        children: \"Overall Score:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 407,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        fontWeight: \"bold\",\n                        children: [comparison.averageScores.overall.toFixed(1), \"/10\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 408,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [products.map((product, index) => {\n          const productId = getProductId(product);\n          if (!productId) return null;\n\n          // Find the corresponding analysis (might be mock data)\n          const productAnalysis = analyses.find(a => a.product === productId);\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 2,\n              sx: {\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                position: 'relative',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                sx: {\n                  position: 'absolute',\n                  top: 8,\n                  right: 8,\n                  minWidth: 'auto',\n                  width: 30,\n                  height: 30,\n                  padding: 0,\n                  backgroundColor: 'rgba(255,255,255,0.7)',\n                  '&:hover': {\n                    backgroundColor: 'rgba(255,255,255,0.9)'\n                  }\n                },\n                onClick: () => handleRemoveProduct(productId),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  position: 'relative'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: product.imageUrl || `https://via.placeholder.com/300x200?text=${encodeURIComponent(product.name)}`,\n                  alt: product.name,\n                  style: {\n                    width: '100%',\n                    height: 'auto'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    position: 'absolute',\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    padding: '4px 12px',\n                    backgroundColor: 'rgba(0,0,0,0.7)',\n                    color: 'white',\n                    textAlign: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: product.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  flexGrow: 1\n                },\n                children: [productAnalysis ? /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: [\"Environmental Scores\", usedMockData && /*#__PURE__*/_jsxDEV(Chip, {\n                      label: \"Simulated\",\n                      color: \"warning\",\n                      size: \"small\",\n                      sx: {\n                        ml: 1,\n                        fontSize: '0.7rem'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 25\n                  }, this), Object.entries({\n                    'Carbon Footprint': productAnalysis.scores.carbon,\n                    'Water Usage': productAnalysis.scores.water,\n                    'Resource Consumption': productAnalysis.scores.resources,\n                    'Overall': productAnalysis.scores.overall\n                  }).map(([label, score]) => /*#__PURE__*/_jsxDEV(ScoreBar, {\n                    label: label,\n                    score: score,\n                    productIndex: index\n                  }, label, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    textAlign: 'center',\n                    py: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    color: \"text.secondary\",\n                    children: \"No analysis available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"small\",\n                    sx: {\n                      mt: 1\n                    },\n                    onClick: () => navigate(`/analyze?productId=${productId}`),\n                    children: \"Analyze Now\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    my: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  gutterBottom: true,\n                  children: \"Product Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Category:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 23\n                  }, this), \" \", product.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Materials:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 23\n                  }, this), \" \", Array.isArray(product.materials) ? product.materials.join(', ') : 'Not specified']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Made in:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 23\n                  }, this), \" \", product.manufacturingLocation || 'Not specified']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  pt: 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  fullWidth: true,\n                  variant: \"outlined\",\n                  onClick: () => navigate(`/products/${productId}`),\n                  sx: {\n                    mb: 1\n                  },\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 21\n                }, this), usedMockData && /*#__PURE__*/_jsxDEV(Button, {\n                  fullWidth: true,\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => navigate(`/analyze?productId=${productId}`),\n                  sx: {\n                    mb: 1\n                  },\n                  children: \"Analyze For Real\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)\n          }, productId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this);\n        }), products.length < 3 && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 1,\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n              p: 3,\n              bgcolor: 'background.paper',\n              border: '2px dashed',\n              borderColor: 'divider',\n              borderRadius: 2,\n              cursor: 'pointer',\n              '&:hover': {\n                borderColor: 'primary.main',\n                bgcolor: 'rgba(46,125,50,0.04)'\n              }\n            },\n            onClick: handleAddProduct,\n            children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n              sx: {\n                fontSize: 40,\n                color: 'primary.main',\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              align: \"center\",\n              gutterBottom: true,\n              children: \"Add Another Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              align: \"center\",\n              color: \"text.secondary\",\n              children: \"Compare up to 3 products at once\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), products.length > 1 && /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          mt: 6,\n          mb: 4,\n          borderRadius: 2,\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            px: 3,\n            py: 2,\n            backgroundColor: 'primary.main',\n            color: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Detailed Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 650\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    fontWeight: 'bold'\n                  },\n                  children: \"Feature\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 21\n                }, this), products.map(product => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  sx: {\n                    fontWeight: 'bold'\n                  },\n                  children: product.name\n                }, getProductId(product), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 21\n                }, this), products.map(product => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: product.category\n                }, getProductId(product), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: \"Materials\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 21\n                }, this), products.map(product => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: Array.isArray(product.materials) ? product.materials.join(', ') : 'Not specified'\n                }, getProductId(product), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: \"Manufacturing Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 21\n                }, this), products.map(product => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: product.manufacturingLocation || 'Not specified'\n                }, getProductId(product), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                sx: {\n                  backgroundColor: 'rgba(46,125,50,0.1)'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  sx: {\n                    fontWeight: 'bold'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(EcoIcon, {\n                      sx: {\n                        mr: 1,\n                        color: 'primary.main'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 682,\n                      columnNumber: 25\n                    }, this), \"Overall Environmental Score\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 21\n                }, this), products.map(product => {\n                  const productId = getProductId(product);\n                  const analysis = analyses.find(a => a.product === productId);\n                  const score = analysis ? analysis.scores.overall : 'N/A';\n                  let bgColor = '';\n                  if (score >= 9) bgColor = 'rgba(67, 160, 71, 0.2)'; // excellent - green\n                  else if (score >= 7) bgColor = 'rgba(124, 179, 66, 0.2)'; // good - light green\n                  else if (score >= 5) bgColor = 'rgba(253, 216, 53, 0.2)'; // average - yellow\n                  else if (score >= 3) bgColor = 'rgba(251, 140, 0, 0.2)'; // poor - orange\n                  else if (score !== 'N/A') bgColor = 'rgba(229, 57, 53, 0.2)'; // bad - red\n\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    sx: {\n                      fontWeight: 'bold',\n                      backgroundColor: bgColor,\n                      fontSize: '1.1rem'\n                    },\n                    children: [score !== 'N/A' ? `${score}/10` : 'Not Analyzed', usedMockData && score !== 'N/A' && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      display: \"block\",\n                      sx: {\n                        fontSize: '0.7rem',\n                        color: 'text.secondary'\n                      },\n                      children: \"(simulated)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 710,\n                      columnNumber: 29\n                    }, this)]\n                  }, productId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 699,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: \"Carbon Footprint Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 21\n                }, this), products.map(product => {\n                  const productId = getProductId(product);\n                  const analysis = analyses.find(a => a.product === productId);\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: analysis ? `${analysis.scores.carbon}/10` : 'N/A'\n                  }, productId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 728,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: \"Water Usage Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 21\n                }, this), products.map(product => {\n                  const productId = getProductId(product);\n                  const analysis = analyses.find(a => a.product === productId);\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: analysis ? `${analysis.scores.water}/10` : 'N/A'\n                  }, productId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 744,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: \"Resource Consumption Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 21\n                }, this), products.map(product => {\n                  const productId = getProductId(product);\n                  const analysis = analyses.find(a => a.product === productId);\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: analysis ? `${analysis.scores.resources}/10` : 'N/A'\n                  }, productId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 760,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 4,\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(EcoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 24\n          }, this),\n          onClick: () => navigate('/search'),\n          children: \"Find More Eco-Friendly Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Share this comparison\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 26\n            }, this),\n            onClick: () => {\n              navigator.clipboard.writeText(window.location.href);\n              alert('Comparison link copied to clipboard!');\n            },\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n}\n_s(ComparisonPage, \"9v4dphDcR3CGCr6rcUGV0+qdWcE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c2 = ComparisonPage;\nexport default ComparisonPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"ScoreBar\");\n$RefreshReg$(_c2, \"ComparisonPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","useLocation","useNavigate","Box","Container","Typography","Paper","Grid","Button","Divider","CircularProgress","Alert","Chip","Card","CardContent","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Tooltip","LinearProgress","CloseIcon","EcoIcon","ShareIcon","CompareArrowsIcon","AddIcon","CheckCircleIcon","productAPI","analysisAPI","jsxDEV","_jsxDEV","getProductId","product","_id","id","ScoreBar","score","label","productIndex","color","offsetPercentage","sx","mb","children","display","justifyContent","variant","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","position","height","value","borderRadius","backgroundColor","transition","mt","_c","generateMockAnalysis","productId","productName","carbonScore","Math","floor","random","waterScore","resourcesScore","overallScore","round","scores","carbon","water","resources","overall","explanation","suggestions","createdAt","Date","toISOString","ComparisonPage","_s","location","navigate","queryParams","URLSearchParams","search","productIds","get","split","products","setProducts","analyses","setAnalyses","loading","setLoading","error","setError","comparison","setComparison","usedMockData","setUsedMockData","fetchData","validProductIds","filter","length","console","log","productPromises","map","getProductById","productResponses","Promise","all","fetchedProducts","response","data","fetchedAnalyses","analysisPromises","getProductAnalysis","analysisResults","allSettled","successfulResults","result","_result$value","status","name","analysisError","comparisonResponse","compareProducts","compError","createAndSetFallbackComparison","err","message","warn","_bestProductAnalysis$","avgCarbon","reduce","sum","a","_a$scores","avgWater","_a$scores2","avgResources","_a$scores3","avgOverall","_a$scores4","sortedAnalyses","sort","b","_b$scores","_a$scores5","bestProductAnalysis","bestProductId","bestProduct","find","p","fallbackComparison","averageScores","handleRemoveProduct","updatedProductIds","join","handleAddProduct","alignItems","minHeight","size","maxWidth","py","severity","startIcon","onClick","className","pt","pb","component","gutterBottom","textAlign","elevation","container","spacing","item","xs","md","mr","verticalAlign","toFixed","index","productAnalysis","sm","flexDirection","overflow","top","right","minWidth","width","padding","fontSize","src","imageUrl","encodeURIComponent","alt","style","bottom","left","flexGrow","ml","Object","entries","my","category","Array","isArray","materials","manufacturingLocation","fullWidth","bgcolor","border","borderColor","cursor","align","px","scope","analysis","bgColor","gap","title","navigator","clipboard","writeText","window","href","alert","_c2","$RefreshReg$"],"sources":["/Users/deocherisme/environmental-impact-analyzer/frontend/src/pages/ComparisonPage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  Grid,\n  Button,\n  Divider,\n  CircularProgress,\n  Alert,\n  Chip,\n  Card,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  LinearProgress\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport EcoIcon from '../components/icons/EcoIcon';\nimport ShareIcon from '@mui/icons-material/Share';\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\nimport AddIcon from '@mui/icons-material/Add';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// Import API services\nimport { productAPI, analysisAPI } from '../services/api';\n\n// Helper function to safely get product IDs\nconst getProductId = (product) => {\n  if (!product) return null;\n  return product._id || product.id || null;\n};\n\n// Component to display score with bar\nconst ScoreBar = ({ score, label, productIndex = 0 }) => {\n  let color = '';\n  \n  if (score >= 9) color = '#43a047'; // excellent\n  else if (score >= 7) color = '#7cb342'; // good\n  else if (score >= 5) color = '#fdd835'; // average\n  else if (score >= 3) color = '#fb8c00'; // poor\n  else color = '#e53935'; // bad\n  \n  // Offset the bars slightly for better visualization\n  const offsetPercentage = productIndex * 2;\n  \n  return (\n    <Box sx={{ mb: 2 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\n        <Typography variant=\"body2\">{label}</Typography>\n        <Typography variant=\"body2\" fontWeight=\"bold\">{score}/10</Typography>\n      </Box>\n      <Box sx={{ position: 'relative', height: 20 }}>\n        <LinearProgress\n          variant=\"determinate\"\n          value={score * 10}\n          sx={{\n            height: 20,\n            borderRadius: 1,\n            backgroundColor: 'rgba(0,0,0,0.1)',\n            '& .MuiLinearProgress-bar': {\n              backgroundColor: color,\n              transition: 'transform 0.8s ease-in-out',\n            },\n            mt: `${offsetPercentage}px`,\n          }}\n        />\n      </Box>\n    </Box>\n  );\n};\n\n// Mock data generator for analyses\nconst generateMockAnalysis = (productId, productName) => {\n  // Generate random scores between 3 and 9\n  const carbonScore = Math.floor(Math.random() * 7) + 3;\n  const waterScore = Math.floor(Math.random() * 7) + 3;\n  const resourcesScore = Math.floor(Math.random() * 7) + 3;\n  const overallScore = Math.round((carbonScore + waterScore + resourcesScore) / 3);\n  \n  return {\n    id: `mock-${productId}`,\n    product: productId,\n    scores: {\n      carbon: carbonScore,\n      water: waterScore,\n      resources: resourcesScore,\n      overall: overallScore\n    },\n    explanation: `This is a simulated environmental analysis for ${productName}. The product has been given scores based on typical values for its category.`,\n    suggestions: \"Consider analyzing this product for real environmental impact data.\",\n    createdAt: new Date().toISOString()\n  };\n};\n\nfunction ComparisonPage() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  const queryParams = useMemo(() => new URLSearchParams(location.search), [location.search]);\n  \n  // Use useMemo to prevent recreation of productIds on every render\n  const productIds = useMemo(() => {\n    return queryParams.get('products') ? queryParams.get('products').split(',') : [];\n  }, [queryParams]);\n  \n  const [products, setProducts] = useState([]);\n  const [analyses, setAnalyses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [comparison, setComparison] = useState(null);\n  const [usedMockData, setUsedMockData] = useState(false);\n  \n  // Fetch product and analysis data\n  const fetchData = useCallback(async () => {\n    // Validate product IDs first\n    const validProductIds = productIds.filter(id => id && id !== 'undefined');\n    \n    if (validProductIds.length === 0) {\n      setError('No valid products selected for comparison.');\n      setLoading(false);\n      return;\n    }\n    \n    setLoading(true);\n    setError('');\n    setUsedMockData(false);\n    \n    try {\n      console.log('Fetching products for IDs:', validProductIds);\n      \n      // Use real API calls to fetch products\n      const productPromises = validProductIds.map(id => productAPI.getProductById(id));\n      const productResponses = await Promise.all(productPromises);\n      \n      // Normalize product data to handle both _id and id fields\n      const fetchedProducts = productResponses.map(response => {\n        const product = response.data;\n        return {\n          ...product,\n          _id: getProductId(product) // Ensure _id field exists\n        };\n      }).filter(product => !!product._id); // Filter out any invalid products\n      \n      console.log('Fetched products:', fetchedProducts);\n      setProducts(fetchedProducts);\n      \n      // Try to fetch analyses, but use mock data if the API fails\n      let fetchedAnalyses = [];\n      try {\n        // Try to fetch analyses with Promise.allSettled to handle partial failures\n        const analysisPromises = validProductIds.map(id => analysisAPI.getProductAnalysis(id));\n        const analysisResults = await Promise.allSettled(analysisPromises);\n        \n        // Extract data from successful responses\n        const successfulResults = analysisResults\n          .filter(result => result.status === 'fulfilled' && result.value?.data)\n          .map(result => result.value.data);\n        \n        // Check if we found any valid analyses\n        if (successfulResults.length > 0) {\n          fetchedAnalyses = successfulResults;\n          console.log('Successfully fetched analyses:', fetchedAnalyses);\n        } else {\n          // If no analyses were found, generate mock data\n          console.log('No analyses found, generating mock data');\n          fetchedAnalyses = fetchedProducts.map(product => \n            generateMockAnalysis(getProductId(product), product.name)\n          );\n          setUsedMockData(true);\n          console.log('Generated mock analyses:', fetchedAnalyses);\n        }\n      } catch (analysisError) {\n        console.error('Error fetching analyses, using mock data instead:', analysisError);\n        // Generate mock analyses for all products\n        fetchedAnalyses = fetchedProducts.map(product => \n          generateMockAnalysis(getProductId(product), product.name)\n        );\n        setUsedMockData(true);\n        console.log('Generated mock analyses after error:', fetchedAnalyses);\n      }\n      \n      setAnalyses(fetchedAnalyses);\n      \n      // Generate comparison data\n      if (fetchedProducts.length > 1 && fetchedAnalyses.length > 0) {\n        try {\n          // Try the API first\n          const comparisonResponse = await analysisAPI.compareProducts(validProductIds);\n          setComparison(comparisonResponse.data);\n        } catch (compError) {\n          console.error('Error generating comparison, using fallback:', compError);\n          \n          // Create a fallback comparison\n          createAndSetFallbackComparison(fetchedProducts, fetchedAnalyses);\n        }\n      } else if (fetchedProducts.length > 1) {\n        // Not enough analyses for comparison, create fallback\n        createAndSetFallbackComparison(fetchedProducts, fetchedAnalyses);\n      } else {\n        // Not enough products for comparison\n        setError('At least 2 products are needed for comparison.');\n      }\n      \n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching comparison data:', err);\n      setError(err.message || 'Failed to load comparison data. Please try again.');\n      setLoading(false);\n    }\n  }, [productIds]);\n  \n  // Helper function to create and set fallback comparison\n  const createAndSetFallbackComparison = (products, analyses) => {\n    if (!analyses || analyses.length === 0) {\n      console.warn('No analyses available for comparison');\n      return;\n    }\n    \n    try {\n      // Calculate average scores\n      const avgCarbon = analyses.reduce((sum, a) => sum + (a.scores?.carbon || 0), 0) / analyses.length;\n      const avgWater = analyses.reduce((sum, a) => sum + (a.scores?.water || 0), 0) / analyses.length;\n      const avgResources = analyses.reduce((sum, a) => sum + (a.scores?.resources || 0), 0) / analyses.length;\n      const avgOverall = analyses.reduce((sum, a) => sum + (a.scores?.overall || 0), 0) / analyses.length;\n      \n      // Find best product (highest overall score)\n      const sortedAnalyses = [...analyses].sort((a, b) => \n        (b.scores?.overall || 0) - (a.scores?.overall || 0)\n      );\n      \n      const bestProductAnalysis = sortedAnalyses[0];\n      const bestProductId = bestProductAnalysis.product;\n      const bestProduct = products.find(p => getProductId(p) === bestProductId) || products[0];\n      \n      const fallbackComparison = {\n        bestProduct: {\n          id: getProductId(bestProduct),\n          name: bestProduct.name,\n          score: bestProductAnalysis.scores?.overall || 5\n        },\n        averageScores: {\n          carbon: avgCarbon || 5,\n          water: avgWater || 5,\n          resources: avgResources || 5,\n          overall: avgOverall || 5\n        }\n      };\n      \n      console.log('Created fallback comparison:', fallbackComparison);\n      setComparison(fallbackComparison);\n    } catch (error) {\n      console.error('Error creating fallback comparison:', error);\n    }\n  };\n  \n  // Fetch data on component mount\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  \n  // Handle removing a product from comparison\n  const handleRemoveProduct = (productId) => {\n    if (!productId) return;\n    \n    const updatedProductIds = productIds.filter(id => id !== productId);\n    \n    if (updatedProductIds.length < 2) {\n      // Redirect to product page if only one product left\n      if (updatedProductIds.length === 1) {\n        navigate(`/products/${updatedProductIds[0]}`);\n      } else {\n        navigate('/search');\n      }\n    } else {\n      navigate(`/compare?products=${updatedProductIds.join(',')}`);\n    }\n  };\n  \n  // Handle adding another product\n  const handleAddProduct = () => {\n    navigate('/search');\n  };\n  \n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>\n        <CircularProgress size={60} />\n      </Box>\n    );\n  }\n  \n  if (error) {\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 8 }}>\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n        <Button\n          variant=\"contained\"\n          startIcon={<CompareArrowsIcon />}\n          onClick={() => navigate('/search')}\n        >\n          Select Products to Compare\n        </Button>\n      </Container>\n    );\n  }\n  \n  return (\n    <Box className=\"page-transition\">\n      {/* Header */}\n      <Box\n        sx={{\n          pt: 6,\n          pb: 6,\n          backgroundColor: 'primary.main',\n          color: 'white',\n        }}\n        className=\"eco-gradient-bg\"\n      >\n        <Container maxWidth=\"lg\">\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n            gutterBottom\n            sx={{ fontWeight: 'bold', textAlign: 'center' }}\n          >\n            Product Comparison\n          </Typography>\n          <Typography variant=\"h6\" sx={{ mb: 4, textAlign: 'center' }}>\n            Compare environmental impact and features of selected products\n          </Typography>\n        </Container>\n      </Box>\n      \n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        {/* Mock Data Notice */}\n        {usedMockData && (\n          <Alert severity=\"info\" sx={{ mb: 4 }}>\n            Note: Using simulated environmental impact data for comparison purposes. For accurate analysis, use the Analyze button on each product.\n          </Alert>\n        )}\n        \n        {/* Comparison Summary */}\n        {comparison && (\n          <Paper elevation={3} sx={{ p: 3, mb: 4, borderRadius: 2 }}>\n            <Typography variant=\"h5\" gutterBottom>\n              Comparison Summary\n            </Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      <CheckCircleIcon sx={{ color: 'success.main', mr: 1, verticalAlign: 'middle' }} />\n                      Most Environmentally Friendly Option\n                    </Typography>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <Typography variant=\"body1\" sx={{ mr: 1 }}>\n                        {comparison.bestProduct.name}\n                      </Typography>\n                      <Chip \n                        label={`Score: ${comparison.bestProduct.score}/10`} \n                        color=\"primary\" \n                        size=\"small\" \n                      />\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Average Environmental Scores\n                    </Typography>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6}>\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                          <Typography variant=\"body2\" sx={{ mr: 1 }}>Carbon Footprint:</Typography>\n                          <Typography variant=\"body1\" fontWeight=\"bold\">\n                            {comparison.averageScores.carbon.toFixed(1)}/10\n                          </Typography>\n                        </Box>\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                          <Typography variant=\"body2\" sx={{ mr: 1 }}>Water Usage:</Typography>\n                          <Typography variant=\"body1\" fontWeight=\"bold\">\n                            {comparison.averageScores.water.toFixed(1)}/10\n                          </Typography>\n                        </Box>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                          <Typography variant=\"body2\" sx={{ mr: 1 }}>Resource Use:</Typography>\n                          <Typography variant=\"body1\" fontWeight=\"bold\">\n                            {comparison.averageScores.resources.toFixed(1)}/10\n                          </Typography>\n                        </Box>\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                          <Typography variant=\"body2\" sx={{ mr: 1 }}>Overall Score:</Typography>\n                          <Typography variant=\"body1\" fontWeight=\"bold\">\n                            {comparison.averageScores.overall.toFixed(1)}/10\n                          </Typography>\n                        </Box>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n        \n        {/* Products Grid */}\n        <Grid container spacing={3}>\n          {products.map((product, index) => {\n            const productId = getProductId(product);\n            if (!productId) return null;\n            \n            // Find the corresponding analysis (might be mock data)\n            const productAnalysis = analyses.find(a => a.product === productId);\n            \n            return (\n              <Grid item xs={12} sm={6} md={4} key={productId}>\n                <Paper \n                  elevation={2} \n                  sx={{ \n                    height: '100%', \n                    display: 'flex', \n                    flexDirection: 'column',\n                    position: 'relative',\n                    borderRadius: 2,\n                    overflow: 'hidden'\n                  }}\n                >\n                  {/* Close Button */}\n                  <Button\n                    size=\"small\"\n                    sx={{ \n                      position: 'absolute', \n                      top: 8, \n                      right: 8, \n                      minWidth: 'auto',\n                      width: 30,\n                      height: 30,\n                      padding: 0,\n                      backgroundColor: 'rgba(255,255,255,0.7)',\n                      '&:hover': {\n                        backgroundColor: 'rgba(255,255,255,0.9)',\n                      }\n                    }}\n                    onClick={() => handleRemoveProduct(productId)}\n                  >\n                    <CloseIcon fontSize=\"small\" />\n                  </Button>\n                  \n                  {/* Product Image */}\n                  <Box sx={{ position: 'relative' }}>\n                    <img \n                      src={product.imageUrl || `https://via.placeholder.com/300x200?text=${encodeURIComponent(product.name)}`} \n                      alt={product.name} \n                      style={{ width: '100%', height: 'auto' }} \n                    />\n                    <Box \n                      sx={{ \n                        position: 'absolute',\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                        padding: '4px 12px',\n                        backgroundColor: 'rgba(0,0,0,0.7)',\n                        color: 'white',\n                        textAlign: 'center'\n                      }}\n                    >\n                      <Typography variant=\"body2\">\n                        {product.name}\n                      </Typography>\n                    </Box>\n                  </Box>\n                  \n                  {/* Product Details */}\n                  <Box sx={{ p: 2, flexGrow: 1 }}>\n                    {/* Show environmental scores if analysis is available */}\n                    {productAnalysis ? (\n                      <Box>\n                        <Typography variant=\"subtitle1\" gutterBottom>\n                          Environmental Scores\n                          {usedMockData && (\n                            <Chip \n                              label=\"Simulated\" \n                              color=\"warning\" \n                              size=\"small\" \n                              sx={{ ml: 1, fontSize: '0.7rem' }}\n                            />\n                          )}\n                        </Typography>\n                        \n                        {Object.entries({\n                          'Carbon Footprint': productAnalysis.scores.carbon,\n                          'Water Usage': productAnalysis.scores.water,\n                          'Resource Consumption': productAnalysis.scores.resources,\n                          'Overall': productAnalysis.scores.overall\n                        }).map(([label, score]) => (\n                          <ScoreBar \n                            key={label} \n                            label={label} \n                            score={score} \n                            productIndex={index}\n                          />\n                        ))}\n                      </Box>\n                    ) : (\n                      <Box sx={{ textAlign: 'center', py: 2 }}>\n                        <Typography variant=\"body1\" color=\"text.secondary\">\n                          No analysis available\n                        </Typography>\n                        <Button \n                          variant=\"contained\" \n                          size=\"small\" \n                          sx={{ mt: 1 }}\n                          onClick={() => navigate(`/analyze?productId=${productId}`)}\n                        >\n                          Analyze Now\n                        </Button>\n                      </Box>\n                    )}\n                    \n                    <Divider sx={{ my: 2 }} />\n                    \n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Product Details\n                    </Typography>\n                    \n                    <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                      <strong>Category:</strong> {product.category}\n                    </Typography>\n                    \n                    <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                      <strong>Materials:</strong> {Array.isArray(product.materials) ? product.materials.join(', ') : 'Not specified'}\n                    </Typography>\n                    \n                    <Typography variant=\"body2\">\n                      <strong>Made in:</strong> {product.manufacturingLocation || 'Not specified'}\n                    </Typography>\n                  </Box>\n                  \n                  {/* Action Buttons */}\n                  <Box sx={{ p: 2, pt: 0 }}>\n                    <Button \n                      fullWidth \n                      variant=\"outlined\" \n                      onClick={() => navigate(`/products/${productId}`)}\n                      sx={{ mb: 1 }}\n                    >\n                      View Details\n                    </Button>\n                    \n                    {/* Show analyze button if using simulated data */}\n                    {usedMockData && (\n                      <Button \n                        fullWidth \n                        variant=\"contained\" \n                        color=\"primary\"\n                        onClick={() => navigate(`/analyze?productId=${productId}`)}\n                        sx={{ mb: 1 }}\n                      >\n                        Analyze For Real\n                      </Button>\n                    )}\n                  </Box>\n                </Paper>\n              </Grid>\n            );\n          })}\n          \n          {/* Add Product Card */}\n          {products.length < 3 && (\n            <Grid item xs={12} sm={6} md={4}>\n              <Paper \n                elevation={1} \n                sx={{ \n                  height: '100%',\n                  display: 'flex', \n                  flexDirection: 'column',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  p: 3,\n                  bgcolor: 'background.paper',\n                  border: '2px dashed',\n                  borderColor: 'divider',\n                  borderRadius: 2,\n                  cursor: 'pointer',\n                  '&:hover': {\n                    borderColor: 'primary.main',\n                    bgcolor: 'rgba(46,125,50,0.04)',\n                  }\n                }}\n                onClick={handleAddProduct}\n              >\n                <AddIcon sx={{ fontSize: 40, color: 'primary.main', mb: 2 }} />\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                  Add Another Product\n                </Typography>\n                <Typography variant=\"body2\" align=\"center\" color=\"text.secondary\">\n                  Compare up to 3 products at once\n                </Typography>\n              </Paper>\n            </Grid>\n          )}\n        </Grid>\n        \n        {/* Comparison Table */}\n        {products.length > 1 && (\n          <Paper elevation={3} sx={{ mt: 6, mb: 4, borderRadius: 2, overflow: 'hidden' }}>\n            <Box sx={{ px: 3, py: 2, backgroundColor: 'primary.main', color: 'white' }}>\n              <Typography variant=\"h5\">\n                Detailed Comparison\n              </Typography>\n            </Box>\n            \n            <TableContainer>\n              <Table sx={{ minWidth: 650 }}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ fontWeight: 'bold' }}>Feature</TableCell>\n                    {products.map(product => (\n                      <TableCell key={getProductId(product)} align=\"center\" sx={{ fontWeight: 'bold' }}>\n                        {product.name}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {/* Category */}\n                  <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">\n                      Category\n                    </TableCell>\n                    {products.map(product => (\n                      <TableCell key={getProductId(product)} align=\"center\">\n                        {product.category}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                  \n                  {/* Materials */}\n                  <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">\n                      Materials\n                    </TableCell>\n                    {products.map(product => (\n                      <TableCell key={getProductId(product)} align=\"center\">\n                        {Array.isArray(product.materials) ? product.materials.join(', ') : 'Not specified'}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                  \n                  {/* Manufacturing Location */}\n                  <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">\n                      Manufacturing Location\n                    </TableCell>\n                    {products.map(product => (\n                      <TableCell key={getProductId(product)} align=\"center\">\n                        {product.manufacturingLocation || 'Not specified'}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                  \n                  {/* Overall Environmental Score */}\n                  <TableRow sx={{ backgroundColor: 'rgba(46,125,50,0.1)' }}>\n                    <TableCell component=\"th\" scope=\"row\" sx={{ fontWeight: 'bold' }}>\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        <EcoIcon sx={{ mr: 1, color: 'primary.main' }} />\n                        Overall Environmental Score\n                      </Box>\n                    </TableCell>\n                    {products.map(product => {\n                      const productId = getProductId(product);\n                      const analysis = analyses.find(a => a.product === productId);\n                      const score = analysis ? analysis.scores.overall : 'N/A';\n                      let bgColor = '';\n                      \n                      if (score >= 9) bgColor = 'rgba(67, 160, 71, 0.2)'; // excellent - green\n                      else if (score >= 7) bgColor = 'rgba(124, 179, 66, 0.2)'; // good - light green\n                      else if (score >= 5) bgColor = 'rgba(253, 216, 53, 0.2)'; // average - yellow\n                      else if (score >= 3) bgColor = 'rgba(251, 140, 0, 0.2)'; // poor - orange\n                      else if (score !== 'N/A') bgColor = 'rgba(229, 57, 53, 0.2)'; // bad - red\n                      \n                      return (\n                        <TableCell \n                          key={productId} \n                          align=\"center\"\n                          sx={{ \n                            fontWeight: 'bold', \n                            backgroundColor: bgColor,\n                            fontSize: '1.1rem'\n                          }}\n                        >\n                          {score !== 'N/A' ? `${score}/10` : 'Not Analyzed'}\n                          {usedMockData && score !== 'N/A' && (\n                            <Typography variant=\"caption\" display=\"block\" sx={{ fontSize: '0.7rem', color: 'text.secondary' }}>\n                              (simulated)\n                            </Typography>\n                          )}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                  \n                  {/* Carbon Footprint */}\n                  <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">\n                      Carbon Footprint Score\n                    </TableCell>\n                    {products.map(product => {\n                      const productId = getProductId(product);\n                      const analysis = analyses.find(a => a.product === productId);\n                      return (\n                        <TableCell key={productId} align=\"center\">\n                          {analysis ? `${analysis.scores.carbon}/10` : 'N/A'}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                  \n                  {/* Water Usage */}\n                  <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">\n                      Water Usage Score\n                    </TableCell>\n                    {products.map(product => {\n                      const productId = getProductId(product);\n                      const analysis = analyses.find(a => a.product === productId);\n                      return (\n                        <TableCell key={productId} align=\"center\">\n                          {analysis ? `${analysis.scores.water}/10` : 'N/A'}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                  \n                  {/* Resource Consumption */}\n                  <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">\n                      Resource Consumption Score\n                    </TableCell>\n                    {products.map(product => {\n                      const productId = getProductId(product);\n                      const analysis = analyses.find(a => a.product === productId);\n                      return (\n                        <TableCell key={productId} align=\"center\">\n                          {analysis ? `${analysis.scores.resources}/10` : 'N/A'}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n        )}\n        \n        {/* Action Buttons */}\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4, gap: 2 }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<EcoIcon />}\n            onClick={() => navigate('/search')}\n          >\n            Find More Eco-Friendly Products\n          </Button>\n          \n          <Tooltip title=\"Share this comparison\">\n            <Button\n              variant=\"outlined\"\n              startIcon={<ShareIcon />}\n              onClick={() => {\n                navigator.clipboard.writeText(window.location.href);\n                alert('Comparison link copied to clipboard!');\n              }}\n            >\n              Share\n            </Button>\n          </Tooltip>\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n\nexport default ComparisonPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}